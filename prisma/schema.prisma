// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Product {
  id                     String    @id @default(uuid())
  name                   String
  priceInPence           Int
  filePath               String
  imagePath              String
  description            String
  lengthInMm             Int
  widthInMm              Int
  heightInMm             Int
  isAvailableForPurchase Boolean   @default(true)
  createdAt              DateTime  @default(now())
  updatedAt              DateTime  @updatedAt
  orders                 Order[]
  downloadVerifications  DownloadVerification[]
  colours                Colour[]
  availablequantity      Int      
  configuredproducts     ConfiguredProduct[] 
}



model User {
  id        String   @id @default(uuid())
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model Order {
  id               String   @id @default(uuid())
  pricePaidInPence Int
  quantity         Int      @default(1)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  userId    String
  productId String
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  product   Product @relation(fields: [productId], references: [id], onDelete: Restrict)
}

model DownloadVerification {
  id        String   @id @default(uuid())
  expiresAt DateTime
  createdAt DateTime @default(now())
  productId String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Colour {
  id        String   @id @default(uuid())
  name      String
  productId String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model ConfiguredProduct {
  id                  String   @id @default(uuid())
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  purchasequantity    Int      @default(1)
  Colour              String   @default("")
  productId           String
  product             Product  @relation(fields: [productId], references: [id], onDelete: Restrict)
}
