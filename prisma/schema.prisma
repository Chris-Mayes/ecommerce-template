// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Product {
  id                     String    @id @default(uuid())
  name                   String
  priceInPence           Int
  filePath               String
  imagePath              String
  description            String
  lengthInMm             Int
  widthInMm              Int
  heightInMm             Int
  isAvailableForPurchase Boolean   @default(true)
  availableQuantity      Int
  createdAt              DateTime  @default(now())
  updatedAt              DateTime  @updatedAt
  orders                 OrderItem[]
  downloadVerifications  DownloadVerification[]
  colours                Colour[]
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model Order {
  id        String       @id @default(uuid())
  userId    String
  user      User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  items     OrderItem[]
  createdAt DateTime     @default(now())
  updatedAt DateTime     @default(now())
}

model OrderItem {
  id               String   @id @default(uuid())
  quantity         Int
  priceInPence     Int
  productId        String
  orderId          String
  product          Product  @relation(fields: [productId], references: [id], onDelete: Restrict)
  order            Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @default(now())
}

model DownloadVerification {
  id        String   @id @default(uuid())
  expiresAt DateTime
  createdAt DateTime @default(now())
  productId String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Colour {
  id        String   @id @default(uuid())
  name      String
  productId String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}
